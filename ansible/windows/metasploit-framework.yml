---

#################################################################################
# Metasploit setup
#################################################################################

- hosts: all
  become: false
  gather_facts: false

  vars:
    install_directory: 'c:/metasploit-framework'
    postgres_port: '5432'
    postgres_password: 'vagrant'
    winpcap_wpdpack_zip: 'C:\Windows\Temp\WpdPack_4_1_2.zip'
    winpcap_wpdpack_extract_folder: 'C:\'
    winpcap_wpdpack_folder: '{{ winpcap_wpdpack_extract_folder }}WpdPack'
    winpcap_wpdpack_lib: '{{ winpcap_wpdpack_folder }}\Lib\x64\Packet.lib'

  tasks:

    #################################################################################
    # Git
    #################################################################################

    - name: Install git
      win_chocolatey:
        name: git
        package_params:
          - /GitAndUnixToolsOnPath
          - /NoAutoCrlf
        state: present

    #################################################################################
    # Postgres dependencies
    #################################################################################

    # You can verify login works on the host machine with: psql "postgres://postgres:vagrant@localhost:5432"
    # Original command:
    #   choco install postgres12 --params '/Password:vagrant /Port:5432' --installargs '--enable-components commandlinetools'
    - name: Install postgres - Required for running msfconsole with a database
      win_chocolatey:
        name:
          - postgresql12
        package_params: '/Password:{{ postgres_password }} /Port:{{ postgres_port }}'
        install_args: '--enable-components commandlinetools'
        state: present

    #################################################################################
    # Winpcap installation - from https://www.winpcap.org/devel.htm
    #################################################################################

    - name: winpcap - Check if dev dependencies present
      win_stat:
        path: '{{ winpcap_wpdpack_lib }}'
      register: winpcap_dev_dependencies

    # Required for installing winpcap as part of bundle install in metasploit-framework
    - name: winpcap - Download dev dependencies
      win_get_url:
        url: 'https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip'
        dest: '{{ winpcap_wpdpack_zip }}'
        checksum: f5c80885bd48f07f41833d0f65bf85da1ef1727a
        checksum_algorithm: sha1
      when: not winpcap_dev_dependencies.stat.exists

    - name: winpcap - unzip wpdpack
      win_unzip:
        src: '{{ winpcap_wpdpack_zip }}'
        dest: '{{ winpcap_wpdpack_extract_folder }}'
        creates: '{{ winpcap_wpdpack_lib }}'

    #################################################################################
    # Ruby and bundle
    #################################################################################

    - name: Install Ruby
      win_chocolatey:
        name:
          - ruby
        # ruby 3.0.x is only supported with winpcap: https://github.com/pcaprub/pcaprub/issues/62
        version: '3.0.5.1'
        state: present
      register: ruby_install

    - name: Install msys2
      win_chocolatey:
        name:
          - msys2
        package_params: '/NoUpdate'
        state: present
      register: msys2_install

    - name: Ruby - use ruby's ridk to update the system and install development toolchain
      win_shell: 'ridk install 2 3'
      args:
        executable: cmd
    #   when: ruby_install.changed or msys2_install.changed

    # #################################################################################
    # # Metasploit cloning and bundle
    # #################################################################################

    - name: Metasploit - Clone
      win_git:
        repo: 'https://github.com/rapid7/metasploit-framework'
        dest: '{{ install_directory }}'
      register: metasploit_clone

    - name: Metasploit - bundle install
      win_shell: 'refreshenv && bundle install'
      args:
        executable: cmd
        chdir: '{{ install_directory }}'
      # when: metasploit_clone.changed
