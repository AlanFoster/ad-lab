---

#################################################################################
# Metasploit payloads
#################################################################################

- name: 'Metasploit payloads'
  hosts: all
  become: false
  gather_facts: false

  vars:
    install_directory: 'c:/metasploit-payloads'
    visual_studio_dev_env_path: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\devenv.exe'
    visual_studio_requirements: 'c:/Windows/Temp/vs2019.vsconfig'
    psexec_path: 'c:/Windows/Temp/PsExec64.exe'

  tasks:

    - name: Visual studio - Query if installed
      ansible.windows.win_stat:
        path: '{{ visual_studio_dev_env_path }}'
      register: visual_studio_dev_env

    #################################################################################
    # visual studio dependencies
    #################################################################################

    - name: Visual studio - Download vsconfig requirements
      ansible.windows.win_get_url:
        url: 'https://raw.githubusercontent.com/rapid7/metasploit-payloads/master/c/meterpreter/vs-configs/vs2019.vsconfig'
        dest: '{{ visual_studio_requirements }}'
        checksum: a38ed9e7301f0ff8ec3bc1ec36f6da027680b732
        checksum_algorithm: sha1

    # Ensure sysinternals is installed, for psexec access
    - name: Visual studio - Download psexec
      ansible.windows.win_get_url:
        url: 'https://live.sysinternals.com/PsExec64.exe'
        dest: '{{ psexec_path }}'
        checksum: 0098c79e1404b4399bf0e686d88dbf052269a302
        checksum_algorithm: sha1

    #################################################################################
    # visual studio dependencies - dotnetfx
    #################################################################################

    # Explicitly install via psexec interactive session, as a raw visualstudio2019community install over winrm/ansible fails
    # https://stackoverflow.com/questions/41835740/install-net-framework-4-6-1-using-ansible
    #
    # Original command:
    #   choco install visualstudio2019community --package-parameters "--config c:/windows/temp/vs2019.vsconfig"
    - name: Visual studio - install dotnetfx via psexec
      community.windows.win_psexec:
        command: 'choco install -y dotnetfx'
        executable: '{{ psexec_path }}'
        elevated: true
        nobanner: true
        interactive: true
      register: dotnetfx_install_result
      # XXX: There are more exit codes from Chocolatey now that indicate success -0, 1605, 1614, 1641, and 3010.
      # https://docs.chocolatey.org/en-us/choco/release-notes#breaking-changes-7
      # 3010 indicates a restart is required
      failed_when: "dotnetfx_install_result.rc | default(0) not in [0, 3010]"
      when: not visual_studio_dev_env.stat.exists

    - name: Visual studio - reboot if reboot choco is 3010 exit code
      ansible.windows.win_reboot: {}
      when: dotnetfx_install_result.rc | default(0) == 3010

    - name: Visual studio - Ensure WinRM starts when the system has settled and is ready to work reliably
      ansible.windows.win_service:
        name: WinRM
        start_mode: delayed
      when: dotnetfx_install_result.rc | default(0) == 3010

    #################################################################################
    # visual studio dependencies - visual studio
    #################################################################################

    # Explicitly install via psexec interactive session, as a raw visualstudio2019community install over winrm/ansible fails
    # https://stackoverflow.com/questions/41835740/install-net-framework-4-6-1-using-ansible
    #
    # Original command:
    #   choco install visualstudio2019community --package-parameters "--config c:/windows/temp/vs2019.vsconfig"
    - name: Visual studio - install via psexec
      community.windows.win_psexec:
        command: 'choco install -y visualstudio2019community --package-parameters "--config {{ visual_studio_requirements }}"'
        executable: '{{ psexec_path }}'
        elevated: true
        nobanner: true
        interactive: true
        timeout: 1800
      register: visual_studio_install_result
      when: not visual_studio_dev_env.stat.exists

    - name: Visual studio - reboot if reboot choco is 3010 exit code
      ansible.windows.win_reboot: {}
      when: visual_studio_install_result.rc | default(0) == 3010

    - name: Visual studio - Ensure WinRM starts when the system has settled and is ready to work reliably
      ansible.windows.win_service:
        name: WinRM
        start_mode: delayed
      when: visual_studio_install_result.rc | default(0) == 3010

    #################################################################################
    # Metasploit-payloads cloning and bundle
    #################################################################################

    - name: Metasploit Payloads - Clone
      win_git:
        repo: 'https://github.com/rapid7/metasploit-payloads'
        dest: '{{ install_directory }}'
      register: metasploit_payloads_clone
